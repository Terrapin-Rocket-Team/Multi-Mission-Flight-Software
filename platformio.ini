; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
description = Multi-Mission Flight Software (MMFS)

[env]
lib_deps = 
	adafruit/Adafruit BMP280 Library
	Adafruit BMP3XX Library
	Adafruit BNO055
	SparkFun u-blox GNSS v3
	adafruit/RTClib
	adafruit/Adafruit DPS310@^1.1.4
	pololu/LIS3MDL@^2.0.0
	https://github.com/RobTillaart/MS5611.git#0.4.1
	https://github.com/erodarob/RadioMessage.git
	https://github.com/redstonee/bmi088-arduino-esp32.git
lib_ignore = NativeTestMocks
lib_compat_mode = strict
build_flags = 
	-Wno-unknown-pragmas
	-std=gnu++17
build_src_filter = +<*> +<../examples/Avionics/**>
extra_scripts = pre:get_version.py

[env:teensy41]
platform = teensy
framework = arduino
board = teensy41

[env:native]
platform = native
test_build_src = yes
lib_compat_mode = off
lib_ldf_mode = deep+
build_flags = 
	-std=c++17
	-D NATIVE=1
debug_test = test_logger
debug_build_flags = -g -O0 -fstack-protector-all
build_src_filter = +<*> +<../test/fakeMain/**> -<Sensors/**> +<Sensors/Baro/Barometer.cpp> +<Sensors/GPS/GPS.cpp> +<Sensors/IMU/IMU.cpp> -<RecordData/Logging/LoggingBackend/LoggingBackendLittleFS.cpp> -<RecordData/Logging/LoggingBackend/LoggingBackendSdFat.cpp> -<Radio/**> +<Sensors/Baro/MockBarometer.cpp> +<Sensors/GPS/MockGPS.cpp> +<Sensors/IMU/MockIMU.cpp> +<Sensors/SerialReader.cpp>
test_ignore = test_aprs_encoding
debug_init_break = tbreak UNITY_END
lib_deps = https://github.com/erodarob/RadioMessage.git
lib_ignore = ~

[env:stm]
platform = ststm32
framework = arduino
board = nucleo_h753zi
lib_deps = 
	${env.lib_deps}
	https://github.com/greiman/SdFat.git#2.3.0

[env:esp32]
platform = espressif32
framework = arduino
board = esp32-s3-devkitm-1
build_unflags = -std=gnu++11
lib_deps = 
	${env.lib_deps}
	https://github.com/greiman/SdFat.git#2.3.0